package com.rmalmeidax.estudos.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.rmalmeidax.estudos.DTO.AutorListDTO;
import com.rmalmeidax.estudos.entity.AutorList;
import com.rmalmeidax.estudos.projection.AutorMinProjection;
import com.rmalmeidax.estudos.repository.AutorListRepository;
import com.rmalmeidax.estudos.repository.AutorRepository;

@Service
public class AutorListService {
	
	@Autowired
	private AutorListRepository autorListRepository;
	
	@Autowired
	private AutorRepository autorRepository;
	
	@Transactional(readOnly = true)
	public List<AutorListDTO> findAll(){
		List<AutorList> result =autorListRepository.findAll();
		return result.stream().map(AutorListDTO:: new).toList();
	}
	
	@Transactional
	public void move (Long listId, int sourceIndex, int destinationIndex) {
		List<AutorMinProjection> list = autorRepository.searchByList(listId);
		AutorMinProjection obj = list.remove(sourceIndex);
		list.add(destinationIndex, obj);
		int min = sourceIndex < destinationIndex ? sourceIndex : destinationIndex;
		int max = sourceIndex < destinationIndex ? destinationIndex : sourceIndex;

	}	
		for (int i = min; i <= max; i++) {
			autorListRepository.updateLivroano(listId, list.get(i).getId(), i);
			
	}
	
		@Transactional(readOnly = true)
		public AutorListDTO findById(Long id) {
			AutorList entity = autorListRepository.findById(id).get();
			return new AutorListDTO(entity);
	}
		
}
